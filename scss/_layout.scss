@use 'variables' as *;
@use 'mixins' as *;

.page-wrapper {
    padding-top: $space-1x;
    padding-inline: $space-1x;
    @include compact {
      padding-inline: $space-3q;
      padding-top: $space-3q;
    }
  }

  .hero-wrapper {
    padding: 1rem;
  }

  section + section {  /* Default spacing between all sections */
    margin-top: 12rem;
    @include compact {  // Reduce vertical spacing on compact screens
      margin-top: $space-6x;
    }
  }


  p + p {
    margin-top: $space-1x; //Ensure consistent spacing between <p> elements
  }


// INTERNAL PAGES HEADER 


  .page-intro {
    display: flex;
    flex-direction: column;
    justify-content: end;
    height: calc(100dvh - 1.5rem);
    width: calc(100vw - 1.5rem);
    border-radius: calc($radius/2);
    background-image: url('/assets/about/about-hero2.png');
    background-size: cover;/* This makes it fit the height while maintaining aspect ratio */
    background-position: left 75%; /* Right aligned, vertically centered */

    margin: 0.75rem ; /* This centers it horizontally with equal space on sides */


  
    &__content {
      gap: 4em;
      padding-left: $space-4x;
      padding-bottom: $space-6x;

       @include desktop {
      padding-left: $space-4x;
      padding-bottom: $space-4x;
    }

    }

    &--services{
      background-image: url('/assets/services/services-hero.jpg');
      background-size: cover;
      background-position: left 20%;
    }

    
    &--faqs{
      background-image: url('/assets/faqs-bg--blue.jpg');
      background-size: cover;
      background-position: center;

    }



  }


// SECTION HEADERS 

.section-header {
  margin-bottom: $space-md;

  &--center {
    text-align: center;
    margin-bottom: $space-md;
  }

  &--flex {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: end;
    padding-inline: $space-4x;
  }

}

.extra-gap {
  margin-bottom: $space-4x; // Utility class with 2x the default margin-bottom of the section-header to compensate for optical imbalance between text and graphics when needed
}

  

// CONTAINER LAYOUTS

  .container { 
    display: flex;   
    padding-inline: $space-4x;

    @include desktop {
      padding-inline: $space-3x;
    }
    @include compact {
      padding-inline: $space-2x;
    }
   

  
    &--flex {  
     @include flex-column;
     }

     &--island {

      background-image: url('../assets/services-preview.jpg');
      background-size: cover;
      
      border-radius: $radius;
      padding: $space-6x;
      z-index: -2;

      @include desktop {
        padding-inline: $space-3x;
      }

      @include compact {
        padding: $space-3x;
      }

     }

  }


  .content-wrapper {
    max-width: 50ch;
  }

  
// GRID LAYOUTS

.two-col {
  display: grid;
   grid-template-columns: 1fr 32.5vw;
  padding-inline: $space-4x;

  @include desktop {
     padding-inline: $space-3x;
  }

  @include desktop-lite {
     grid-template-columns: 1fr;
    gap: $space-1x;
  }

  @include compact {
    grid-template-columns: 1fr;
    padding-inline: $space-2x;
  }
}









  // SLIDERS 
  
 // Slider wrapper - handles containment and positioning
.slider-wrapper {
  width: 100%;
  position: relative;
  overflow: visible; // Let cards be visible outside the wrapper, so they don't get cropped by any padding attributes
  padding-left: $space-6x;
  @include compact {
    padding-left: $space-2x;
    overflow: hidden; // only show one card at a time on compact
  }
}

// Core slider functionality - reusable across different contexts
.card-slider {
  display: flex;
  gap: $space-md;
  position: relative;
  left: 0;
  user-select: none;
  width: max-content;
  padding-right: $space-6x;
  

}

.is-dragging * { 
  cursor: grabbing;
}


/*  IMAGES AND GRAPHIC ELEMENTS  */



